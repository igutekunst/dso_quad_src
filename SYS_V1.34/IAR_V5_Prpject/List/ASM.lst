###############################################################################
#                                                                             #
#     IAR Assembler V5.20.0.50892 /W32 for ARM 12/Apr/2011  14:17:04          #
#     Copyright 1999-2008 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  E:\DS0203\SYS_V1.34\source\ASM.s                 #
#           List file     =  E:\DS0203\SYS_V1.34\IAR_V5_Prpject\List\ASM.lst  #
#           Object file   =  E:\DS0203\SYS_V1.34\IAR_V5_Prpject\Obj\ASM.o     #
#           Command line  =  E:\DS0203\SYS_V1.34\source\ASM.s                 #
#                            -OE:\DS0203\SYS_V1.34\IAR_V5_Prpject\Obj\ -s+    #
#                            -M<> -w+ -r                                      #
#                            -LE:\DS0203\SYS_V1.34\IAR_V5_Prpject\List\ -t8   #
#                            --cpu Cortex-M3 --fpu None                       #
#                            -IC:\Program Files\IAR Systems\Embedded Workbench 5.0 Evaluation\ARM\INC\ #
#                                                                             #
###############################################################################

    1                          ;********************* (C) COPYRIGHT 2009
                                e-Design Co.,Ltd. *********************
    2                          ; File Name : ASM.c       
    3                          ; Version   : DS203_SYS Ver 1.3x               
                                                  Author : bure
    4                          ;**********************************************
                               *********************************
    5                            RSEG  SYS_FUNC:CODE(2)
    6                          //  RSEG CODE:CODE(2)
    7                          ;==============================================
                               =================================
    8                          ;                        System function
                                entrance
    9                          ;==============================================
                               =================================
   10                          ; void CTR_HP(void)     USB_HP_Interrupt
   11                          ;----------------------------------------------
                               ---------------------------------
   12                            IMPORT CTR_HP
   13                            EXPORT __CTR_HP
   14                          __CTR_HP
   15    00000000 ........         B.W    CTR_HP
   16                          ;==============================================
                               =================================
   17                          ; void USB_Istr(void)   USB_LP_Interrupt
   18                          ;----------------------------------------------
                               ---------------------------------
   19                            IMPORT USB_Istr
   20                            EXPORT __USB_Istr
   21                          __USB_Istr
   22    00000004 ........         B.W    USB_Istr
   23                          ;==============================================
                               =================================
   24                          ; void __LCD_Initial(void)  
   25                          ;----------------------------------------------
                               ---------------------------------
   26                            IMPORT LCD_Initial
   27                            EXPORT __LCD_Initial 
   28                          __LCD_Initial 
   29    00000008 ........         B.W    LCD_Initial
   30                          ;==============================================
                               =================================
   31                          ; void __Point_SCR(u16 x0, u16 y0)  
   32                          ;----------------------------------------------
                               ---------------------------------
   33                            IMPORT Point_SCR
   34                            EXPORT __Point_SCR 
   35                          __Point_SCR 
   36    0000000C ........         B.W    Point_SCR
   37                          ;==============================================
                               =================================
   38                          ; void __LCD_SetPixl(u16 Color)  
   39                          ;----------------------------------------------
                               ---------------------------------
   40                          
   41                            EXPORT __LCD_SetPixl 
   42                          __LCD_SetPixl 
   43    00000010 43E0             B   LCD_SetPixl
   44    00000012 42E0             B   LCD_SetPixl
   45                          
   46                          ;==============================================
                               =================================
   47                          ; void __Clear_Screen(u16 Color)  
   48                          ;----------------------------------------------
                               ---------------------------------
   49                            IMPORT Clear_Screen
   50                            EXPORT __Clear_Screen 
   51                          __Clear_Screen 
   52    00000014 ........         B.W    Clear_Screen
   53                          ;==============================================
                               =================================
   54                          ; u16 __Get_TAB_8x14(u8 Code, u16 Row) 
                                
   55                          ;----------------------------------------------
                               ---------------------------------
   56                            IMPORT Get_TAB_8x14
   57                            EXPORT __Get_TAB_8x14 
   58                          __Get_TAB_8x14 
   59    00000018 ........         B.W    Get_TAB_8x14
   60                          ;==============================================
                               =================================
   61                          ; void __LCD_Set_Block(u16 x1, u16 x2, u16 y1,
                                u16 y2)  
   62                          ;----------------------------------------------
                               ---------------------------------
   63                            IMPORT LCD_Set_Block
   64                            EXPORT __LCD_Set_Block 
   65                          __LCD_Set_Block 
   66    0000001C ........         B.W    LCD_Set_Block
   67                          ;==============================================
                               =================================
   68                          ; void __LCD_DMA_Ready(void)  Wait LCD data DMA
                                ready
   69                          ;----------------------------------------------
                               ---------------------------------
   70                          
   71                            EXPORT __LCD_DMA_Ready 
   72                          __LCD_DMA_Ready 
   73    00000020 48E0             B    LCD_DMA_Ready
   74    00000022 47E0             B    LCD_DMA_Ready
   75                          
   76                          ;==============================================
                               =================================
   77                          ; void __LCD_Copy(uc16 *pBuffer, u16 NumPixel) 
                                Send a row data to LCD
   78                          ;----------------------------------------------
                               ---------------------------------
   79                          
   80                            EXPORT __LCD_Copy
   81                            
   82                          __LCD_Copy
   83    00000024 63E0             B    LCD_Copy
   84    00000026 62E0             B    LCD_Copy
   85                          ;==============================================
                               =================================
   86                          ; void __LCD_Fill(u16  *pBuffer, u16 NumPixel) 
                                Fill number of pixel by DMA 
   87                          ;----------------------------------------------
                               ---------------------------------
   88                          
   89                            EXPORT __LCD_Fill
   90                          __LCD_Fill
   91    00000028 6BE0             B    LCD_Fill
   92    0000002A 6AE0             B    LCD_Fill
   93                          ;==============================================
                               =================================
   94                          ; void __Row_DMA_Ready(void)  Wait row base
                                data DMA ready
   95                          ;----------------------------------------------
                               ---------------------------------
   96                          
   97                            EXPORT __Row_DMA_Ready 
   98                          __Row_DMA_Ready 
   99    0000002C 38E0             B    Row_DMA_Ready
  100    0000002E 37E0             B    Row_DMA_Ready
  101                          ;==============================================
                               =================================
  102                          ; void __Row_Copy(uc16 *S_Buffer,u16 *T_Buffer)
                                Copy one row base data to buffer
  103                          ;----------------------------------------------
                               ---------------------------------
  104                          
  105                            EXPORT __Row_Copy
  106                          __Row_Copy
  107    00000030 4AE0             B    Row_Copy
  108    00000032 49E0             B    Row_Copy
  109                          ;==============================================
                               =================================
  110                          ; u32 __Read_FIFO(void) 
  111                          ;----------------------------------------------
                               ---------------------------------
  112                          
  113                            EXPORT __Read_FIFO  
  114                          __Read_FIFO
  115    00000034 75E0             B    Read_FIFO
  116    00000036 47E0             B    Row_Copy
  117                          ;==============================================
                               =================================
  118                          ; u32 __Input_Lic(u16 x0, u8 y0, u16 Color); 
                                Return: 32Bits Licence 
  119                          ;----------------------------------------------
                               ---------------------------------
  120                            IMPORT Input_Lic
  121                            EXPORT __Input_Lic
  122                          __Input_Lic
  123    00000038 ........         B.W    Input_Lic
  124                          ;==============================================
                               =================================
  125                          ; u32 __Dev_SN(void)   Get 32bits Device Serial
                                Number
  126                          ;----------------------------------------------
                               ---------------------------------
  127                          
  128                            EXPORT __Dev_SN
  129                          __Dev_SN
  130    0000003C 26E0             B    Dev_SN 
  131    0000003E 25E0             B    Dev_SN
  132                          ;==============================================
                               =================================
  133                          ; u8 __Chk_SYS(u32 Licence)   Check SYS licence
                                           RET: 1 = licence ok
  134                          ;----------------------------------------------
                               ---------------------------------
  135                          
  136                            EXPORT __Chk_SYS
  137                          __Chk_SYS
  138    00000040 1EE0             B    Chk_SYS
  139    00000042 1DE0             B    Chk_SYS
  140                          ;==============================================
                               =================================
  141                          ; u8 __Ident(u32 Dev_ID, u32 Proj_ID, u32
                                Lic_No)          RET: 1 = licence ok
  142                          ;----------------------------------------------
                               ---------------------------------
  143                          
  144                            EXPORT __Ident
  145                          __Ident
  146    00000044 1FE0             B    Ident
  147    00000046 1EE0                         B    Ident
  148                          ;==============================================
                               =================================
  149                          ; void __Display_Str(u16 x0, u16 y0, u16 Color,
                                u8 Mode, u8 *s)                      
  150                          ;----------------------------------------------
                               ---------------------------------
  151                            IMPORT Display_Str
  152                            EXPORT __Display_Str
  153                          __Display_Str
  154    00000048 ........         B.W    Display_Str
  155                          ;==============================================
                               =================================
  156                          ; void __Set(u8 Device, u32 Value)           
                                Hardware control device Settings
  157                          ;----------------------------------------------
                               ---------------------------------
  158                            IMPORT Set
  159                            EXPORT __Set
  160                          __Set
  161    0000004C ........         B.W    Set
  162                          ;==============================================
                               =================================
  163                          ; void Set_Param(u8 RegAddr, u8 Parameter)    
                                Trigger control parameter set
  164                          ;----------------------------------------------
                               ---------------------------------
  165                            IMPORT Set_Param
  166                            EXPORT __Set_Param
  167                          __Set_Param
  168    00000050 ........         B.W    Set_Param
  169                          ;==============================================
                               =================================
  170                          ; u16 Get(u8 Kind)                      Get
                                hardware attribute & status
  171                          ;----------------------------------------------
                               ---------------------------------
  172                            IMPORT Get
  173                            EXPORT __Get
  174                          __Get
  175    00000054 ........         B.W    Get
  176                          ;==============================================
                               =================================
  177                          ; void __Disk_Buff_WR(u8* pBuffer, u32
                                WriteAddr);
  178                          ;----------------------------------------------
                               ---------------------------------
  179                            IMPORT SPI_FLASH_PageWrite
  180                            EXPORT __Disk_Buff_WR
  181                          __Disk_Buff_WR
  182    00000058 ........         B.W    SPI_FLASH_PageWrite
  183                          ;==============================================
                               =================================
  184                          ; void __Disk_Buff_RD(u8* pBuffer, u32
                                ReadAddr, u16 NumByteToRead)
  185                          ;----------------------------------------------
                               ---------------------------------
  186                            IMPORT SPI_FLASH_BufferRead
  187                            EXPORT __Disk_Buff_RD
  188                          __Disk_Buff_RD
  189    0000005C ........         B.W    SPI_FLASH_BufferRead
  190                          ;==============================================
                               =================================
  191                          ; void __Param_Area_WR(u8* pBuffer, u8
                                PageNum)
  192                          ;----------------------------------------------
                               ---------------------------------
  193                            IMPORT Param_PageWrite
  194                            EXPORT __Param_Area_WR
  195                          __Param_Area_WR
  196    00000060 ........         B.W    Param_PageWrite
  197                          ;==============================================
                               =================================
  198                          ; void __Param_Area_RD(u8* pBuffer, u8
                                PageNum)
  199                          ;----------------------------------------------
                               ---------------------------------
  200                            IMPORT Param_PageRead
  201                            EXPORT __Param_Area_RD
  202                          __Param_Area_RD
  203    00000064 ........         B.W    Param_PageRead
  204                          ;==============================================
                               =================================
  205                          ; u16 __LCD_GetPixl(void)  
  206                          ;----------------------------------------------
                               ---------------------------------
  207                          
  208                            EXPORT __LCD_GetPixl
  209                          __LCD_GetPixl 
  210    00000068 13E0             B    LCD_GetPixl
  211    0000006A 12E0             B    LCD_GetPixl
  212                          ;==============================================
                               =================================
  213                          ; void __USB_Init(void)
  214                          ;----------------------------------------------
                               ---------------------------------
  215                            IMPORT USB_Init
  216                            EXPORT __USB_Init
  217                          __USB_Init
  218    0000006C ........         B.W    USB_Init
  219                          ;==============================================
                               =================================
  220                          ; u8 __FLASH_Erase(u32 Address)                
                                                   RET: 1 = ok
  221                          ;----------------------------------------------
                               ---------------------------------
  222                            IMPORT FLASH_Erase
  223                            EXPORT __FLASH_Erase
  224                          __FLASH_Erase
  225    00000070 ........         B.W    FLASH_Erase
  226                          ;==============================================
                               =================================
  227                          ; u8 __FLASH_Prog(u32 Address, u16 Data)       
                                                   RET: 1 = ok    
  228                          ;----------------------------------------------
                               ---------------------------------
  229                            IMPORT FLASH_Prog
  230                            EXPORT __FLASH_Prog
  231                          __FLASH_Prog
  232    00000074 ........         B.W    FLASH_Prog
  233                          ;==============================================
                               =================================
  234                          ; void FLASH_Unlock(void)
  235                          ;----------------------------------------------
                               ---------------------------------
  236                            IMPORT FLASH_Unlock
  237                            EXPORT __FLASH_Unlock
  238                          __FLASH_Unlock
  239    00000078 ........         B.W    FLASH_Unlock
  240                          ;==============================================
                               =================================
  241                          ; void FLASH_Lock(void)
  242                          ;----------------------------------------------
                               ---------------------------------
  243                            IMPORT FLASH_Lock
  244                            EXPORT __FLASH_Lock
  245                          __FLASH_Lock
  246    0000007C ........         B.W    FLASH_Lock
  247                          ;==============================================
                               =================================
  248                          ;==============================================
                               =================================
  249                          
  250                          Chk_SYS    
  251    00000080 2E4B                         LDR                     R3,    
  =0x08000028                             ;//0x08000028
  252    00000082 1B68             LDR     R3,  [R3]
  253    00000084 1847             BX      R3
  254                          
  255                          Ident    
  256    00000086 2E4B                         LDR                     R3,    
  =0x08000024                             ;//0x08000024
  257    00000088 1B68             LDR     R3,  [R3]
  258    0000008A 1847             BX      R3
  259                          
  260                          Dev_SN
  261    0000008C 2D4B                         LDR                     R3,    
  =0x08000020                     ;//0x08000020
  262    0000008E 1B68             LDR     R3,  [R3]
  263    00000090 1847             BX      R3
  264                          
  265                          LCD_GetPixl
  266    00000092 2D49                         LDR                     R1,    
  =0x60000000                             ;#LCD_PORT=0x60000000
  267    00000094 0888             LDRH    R0,  [R1, #0x00]     
  268    00000096 0888             LDRH    R0,  [R1, #0x00]  
  269    00000098 7047             BX      LR
  270                          
  271                          LCD_SetPixl
  272    0000009A 2B49                         LDR                     R1,    
  =0x60000000                     ;#LCD_PORT=0x60000000
  273    0000009C 0880             STRH    R0,  [R1, #0x00]     
  274    0000009E 7047             BX      LR
  275                          
  276                          
  277                          
  278                          Row_DMA_Ready
  279    000000A0 2A49                         LDR                     R1,    
  =0x40020000                             ;#DMA1_BASE=0x40020000
  280    000000A2 C869             LDR     R0,  [R1, #0x1C]    ;R0 = CCR2
  281    000000A4 0122             MOVS    R2,  #0x0001
  282    000000A6 40EA0200         ORR     R0,  R0, R2
  283    000000AA C861             STR     R0,  [R1, #0x1C]    ;DMA1_CH2_EN=1
  284                          Row_DMA_Ready_1
  285    000000AC 086A             LDR     R0,  [R1, #0x20]    ;R0 = CNDTR2
                                                                
  286    000000AE 0028             CMP     R0,  #0
  287    000000B0 FCD1             BNE     Row_DMA_Ready_1
  288    000000B2 7047             BX      LR
  289                              
  290                          LCD_DMA_Ready
  291    000000B4 2649                         LDR                     R1,    
  =0x40020400                             ;#DMA2_BASE=0x40020400
  292    000000B6 8868             LDR     R0,  [R1, #0x08]    ;R0 = CCR1
  293    000000B8 0122             MOVS    R2,  #0x0001
  294    000000BA 40EA0200         ORR     R0,  R0, R2
  295    000000BE 8860             STR     R0,  [R1, #0x08]    ;DMA_CH1_EN=1
  296                          LCD_DMA_Ready_1
  297    000000C0 C868             LDR     R0,  [R1, #0x0C]    ;R0 = CNDTR1
                                                                
  298    000000C2 0028             CMP     R0,  #0
  299    000000C4 FCD1             BNE     LCD_DMA_Ready_1
  300    000000C6 7047             BX      LR
  301                              
  302                          Row_Copy                        ;Input: R0 =
                                Source Ptr, R1 = Target Ptr
  303    000000C8 204B                         LDR                     R3,    
  =0x40020000                             ;#DMA1_BASE=0x40020000
  304    000000CA 47F2C152         MOVW    R2,  #0x75C1
  305    000000CE DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
  306                          Row_Copy_1
  307    000000D0 1A6A             LDR     R2,  [R3, #0x20]    ;R2 = CNDTR2
                                                                
  308    000000D2 002A             CMP     R2,  #0
  309    000000D4 FCD1             BNE     Row_Copy_1
  310    000000D6 47F2C052         MOVW    R2,  #0x75C0
  311    000000DA DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C0
                                                                DMA1_CH2
                                                                disabled
                                                                
  312    000000DC 40F2C902         MOVW    R2,  #0x00C9
  313    000000E0 1A62             STR     R2,  [R3, #0x20]    ;CNDTR2 = 201
                                                                
  314    000000E2 5862             STR     R0,  [R3, #0x24]    ;CPAR2  = R0
                                                                
  315    000000E4 9962             STR     R1,  [R3, #0x28]    ;CMAR2  = R1
                                                                
  316    000000E6 47F2C152         MOVW    R2,  #0x75C1
  317    000000EA DA61             STR     R2,  [R3, #0x1C]    ;CCR2   = 0x75C1
                                                                DMA1_CH2
                                                                enabled
                                                                
  318    000000EC 7047             BX      LR
  319                              
  320                          LCD_Copy                        ;Input: R0 =
                                Source Ptr, R1 = Length
  321    000000EE 184B                         LDR                     R3,    
  =0x40020400                             ;#DMA2_BASE=0x40020400
  322    000000F0 45F29052         MOVW    R2,  #0x5590
  323    000000F4 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5590
                                                                DMA_CH1
                                                                disabled
                                                                
  324    000000F6 5861             STR     R0,  [R3, #0x14]    ;CMAR1  = R0
                                                                
  325    000000F8 D960             STR     R1,  [R3, #0x0C]    ;CNDTR1 = R1
                                                                
  326    000000FA 45F29152         MOVW    R2,  #0x5591
  327    000000FE 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5591
                                                                DMA_CH1 enabled
                                                                
  328    00000100 7047             BX      LR
  329                              
  330                          LCD_Fill
  331    00000102 134B                         LDR                     R3,    
  =0x40020400                             ;#DMA2_BASE=0x40020400
  332    00000104 45F21152         MOVW    R2,  #0x5511
  333    00000108 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5511
                                                                DMA_CH1
                                                                enabled
  334                          LCD_Fill_1
  335    0000010A DA68             LDR     R2,  [R3, #0x0C]    ;R2 = CNDTR1
                                                                
  336    0000010C 002A             CMP     R2,  #0
  337    0000010E FCD1             BNE     LCD_Fill_1
  338    00000110 45F21052         MOVW    R2,  #0x5510
  339    00000114 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5510
                                                                DMA_CH1
                                                                disabled
  340    00000116 5861             STR     R0,  [R3, #0x14]    ;CMAR1  = R0
                                                                
  341    00000118 D960             STR     R1,  [R3, #0x0C]    ;CNDTR1 = R1
                                                                
  342    0000011A 45F21152         MOVW    R2,  #0x5511
  343    0000011E 9A60             STR     R2,  [R3, #0x08]    ;CCR1   = 0x5511
                                                                DMA_CH1
                                                                enabled
  344    00000120 7047             BX      LR
  345                          
  346                          Read_FIFO
  347    00000122 0C49                         LDR                     R1,    
  = 0x40011000     ; GPIO  PORT_C   
  348    00000124 40F22002         MOVW    R2,  #0x20          ; H_L pin:
                                                                GPIO_PORT_B_Bit
                                                               5 
  349    00000128 0B4B                         LDR                     R3,    
  =0x64000000    ; FIFO Port address
  350    0000012A 4A61             STR     R2,  [R1, #0x14]    ; 0 ->
                                                                H_L
  351    0000012C 1888             LDRH    R0,  [R3, #0]       ; FIFO Data ->
                                                                R0
  352    0000012E 4FEA0040         LSL     R0,  R0,  #16
  353                          
  354    00000132 0A61             STR     R2,  [R1, #0x10]    ; 1 ->
                                                                H_L
  355    00000134 1988             LDRH    R1,  [R3, #0]       ; FIFO Data ->
                                                                R1  
  356    00000136 0844             ADD     R0,  R0, R1
  357    00000138 7047             BX      LR
  358                          
  359                          
  360                          
  361                              
  362                          ;----------------------------------------------
                               ---------------------------------
  363                            END
  363.1  0000013A 0000                  TABLE
  363.2  0000013C 28000008             Reference on line 251 
  363.3  00000140 24000008             Reference on line 256 
  363.4  00000144 20000008             Reference on line 261 
  363.5  00000148 00000060             Reference on line 266,272 
  363.6  0000014C 00000240             Reference on line 279,303 
  363.7  00000150 00040240             Reference on line 291,321,331 
  363.8  00000154 00100140             Reference on line 347 
  363.9  00000158 00000064             Reference on line 349 
  363.10                               END (including table)
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 348         #
##############################



